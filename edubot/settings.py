"""
Django settings for edubot project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-yw@c1ambud430eb#k$c35cs!y04)9sr554stjf_v@4k+8josw-"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "accounts",
    'activities',
    'django_recaptcha',
    'axes',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'axes.middleware.AxesMiddleware',
]

ROOT_URLCONF = "edubot.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "edubot.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Email configuration settings for sending emails using SMTP.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Specifies the backend to use for sending emails
EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server for sending emails
EMAIL_FROM = 'edubotteam@gmail.com'  # Email address used as the "from" address
EMAIL_HOST_USER = 'edubotteam@gmail.com'  # Email account username (same as the from email)
EMAIL_HOST_PASSWORD = ''  # App-specific password for the Gmail account
EMAIL_PORT = 587  # Port used by Gmail's SMTP server (587 for TLS)
EMAIL_USE_TLS = True  # Enables TLS for secure email transmission

RECAPTCHA_PUBLIC_KEY = '' # Public key for Google reCAPTCHA integration, used in forms to prevent spam.
RECAPTCHA_PRIVATE_KEY = '' # Private key for Google reCAPTCHA integration, used for server-side verification.
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']# Silence specific system checks related to reCAPTCHA test keys in the project.

# Configuration for the Django Axes package, which handles login attempt monitoring.
AXES_FAILURE_LIMIT = 5  # Defines the number of allowed failed login attempts before the account is locked.
AXES_COOLOFF_TIME = 1  # Cool-off time of 1 hour before users can try logging in again after reaching the failure limit.

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
    {
        "NAME": "accounts.validators.IsEntireAlphaPasswordValidator",  # Custom validator
    },
    {
        "NAME": "accounts.validators.HasUpperCasePasswordValidator",  # Custom validator
    },
    {
        "NAME": "accounts.validators.HasLowerCasePasswordValidator",  # Custom validator
    },
    {
        "NAME": "accounts.validators.HasNumberPasswordValidator",  # Custom validator
    },
    {
        "NAME": "accounts.validators.HasSpecialCharacterPasswordValidator",  # Custom validator
    },
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptPasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]

AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailOrFullNameBackend',  # The custom backend
    'axes.backends.AxesStandaloneBackend',  # Django Axes backend for login attempts monitoring
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

AUTH_USER_MODEL = 'accounts.UserProfile'
LOGIN_URL = 'login'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Gaza"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
